import 'package:flutter/material.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:edge_detection/edge_detection.dart';
import 'package:path_provider/path_provider.dart';
import 'package:path/path.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Edge Detection App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: EdgeDetectionScreen(),
    );
  }
}

class EdgeDetectionScreen extends StatefulWidget {
  @override
  _EdgeDetectionScreenState createState() => _EdgeDetectionScreenState();
}

class _EdgeDetectionScreenState extends State<EdgeDetectionScreen> {
  Future<void> performEdgeDetection(bool fromGallery) async {
    // Check permissions and request if needed
    bool isCameraGranted = await Permission.camera.request().isGranted;
    if (!isCameraGranted) {
      isCameraGranted = await Permission.camera.request() == PermissionStatus.granted;
    }

    if (!isCameraGranted) {
      // Permission not granted, exit method
      return;
    }

    // Generate filepath for saving
    String imagePath = join((await getApplicationSupportDirectory()).path,
        "${(DateTime.now().millisecondsSinceEpoch / 1000).round()}.jpeg");

    try {
      bool success;
      if (fromGallery) {
        success = await EdgeDetection.detectEdgeFromGallery(imagePath,
          androidCropTitle: 'Crop',
          androidCropBlackWhiteTitle: 'Black White',
          androidCropReset: 'Reset',
        );
      } else {
       
        success = await EdgeDetection.detectEdge(imagePath,
          canUseGallery: true,
          androidScanTitle: 'Scanning',
          androidCropTitle: 'Crop',
          androidCropBlackWhiteTitle: 'Black White',
          androidCropReset: 'Reset',
        );
      }
      if (!success) {
        print('Edge detection failed.');
      }
    } catch (e) {
      print('Error during edge detection: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Edge Detection Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () => performEdgeDetection(false),
              child: Text('Start Live Camera Detection'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () => performEdgeDetection(true),
              child: Text('Select From Gallery'),
            ),
          ],
        ),
      ),
    );
  }
}
